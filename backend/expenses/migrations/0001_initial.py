# Generated by Django 3.2.18 on 2025-08-22 14:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name or description of the expense', max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of the expense', max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('KSH', 'Kenya Shilling'), ('GBP', 'British Pound')], default='KSH', max_length=3)),
                ('reference_number', models.CharField(blank=True, help_text='Invoice number, receipt number, or other reference', max_length=100, null=True, unique=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the expense', null=True)),
                ('date_incurred', models.DateField(default=django.utils.timezone.now, help_text='Date when the expense was incurred')),
                ('due_date', models.DateField(blank=True, help_text='Due date for payment if applicable', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('paid', 'Paid')], default='pending', max_length=20)),
                ('approved_by', models.CharField(blank=True, help_text='Name of person who approved', max_length=100, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason if expense was rejected', null=True)),
                ('payment_method', models.CharField(blank=True, help_text='How the expense was paid', max_length=100, null=True)),
                ('payment_date', models.DateField(blank=True, help_text='Date when payment was made', null=True)),
                ('vendor_name', models.CharField(blank=True, help_text='Name of vendor or supplier', max_length=200, null=True)),
                ('vendor_contact', models.CharField(blank=True, help_text='Contact information for vendor', max_length=200, null=True)),
                ('is_recurring', models.BooleanField(default=False, help_text='Is this a recurring expense?')),
                ('recurring_frequency', models.CharField(blank=True, choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('weekly', 'Weekly')], help_text='Frequency if this is a recurring expense', max_length=50, null=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for easy searching', max_length=500, null=True)),
                ('created_by', models.CharField(blank=True, help_text='Person who created this expense record', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date_incurred', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for UI display', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Expense Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Upload receipt, invoice, or other document', upload_to='expense_attachments/%Y/%m/%d/')),
                ('file_type', models.CharField(choices=[('receipt', 'Receipt'), ('invoice', 'Invoice'), ('photo', 'Photo'), ('document', 'Document'), ('other', 'Other')], default='receipt', max_length=20)),
                ('original_filename', models.CharField(help_text='Original filename before upload', max_length=255)),
                ('description', models.CharField(blank=True, help_text='Description of the attachment', max_length=200, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='expenses.expense')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='expenses.expensecategory'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['date_incurred'], name='expenses_ex_date_in_ae17b4_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['status'], name='expenses_ex_status_cbb790_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['category'], name='expenses_ex_categor_20264a_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['currency'], name='expenses_ex_currenc_f13b94_idx'),
        ),
    ]
